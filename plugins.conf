#
# weechat -- plugins.conf
#
# WARNING: It is NOT recommended to edit this file by hand,
# especially if WeeChat is running.
#
# Use /set or similar command to change settings in WeeChat.
#
# For more info, see: https://weechat.org/doc/quickstart
#

[var]
perl.colorize_lines.blacklist_buffers = ""
perl.colorize_lines.buffers = "all"
perl.colorize_lines.highlight = "on"
perl.colorize_lines.highlight_words = "off"
perl.colorize_lines.highlight_words_color = "black,darkgray"
perl.colorize_lines.ignore_tags = "irc_ctcp"
perl.colorize_lines.lines = "on"
perl.colorize_lines.nicks = ""
perl.colorize_lines.own_lines = "on"
perl.colorize_lines.own_lines_color = ""
perl.colorize_lines.tags = "irc_privmsg"
perl.highmon.alignment = "channel"
perl.highmon.away_only = "off"
perl.highmon.color_buf = "on"
perl.highmon.first_run = "true"
perl.highmon.hotlist_show = "off"
perl.highmon.logging = "off"
perl.highmon.merge_private = "off"
perl.highmon.nick_prefix = "<"
perl.highmon.nick_suffix = ">"
perl.highmon.output = "buffer"
perl.highmon.short_names = "off"
python.buffer_autoclose.age_limit = "30"
python.buffer_autoclose.ignore = ""
python.buffer_autoclose.interval = "1"
python.notification_center.activate_bundle_id = "com.googlecode.iterm2"
python.notification_center.ignore_old_messages = "off"
python.notification_center.show_highlights = "on"
python.notification_center.show_message_text = "on"
python.notification_center.show_private_message = "on"
python.notification_center.sound = "on"
python.notification_center.sound_name = "Tink"
python.screen_away.away_suffix = "_away"
python.screen_away.command_on_attach = ""
python.screen_away.command_on_detach = ""
python.screen_away.ignore = ""
python.screen_away.ignore_relays = "off"
python.screen_away.interval = "5"
python.screen_away.message = "Detached from screen"
python.screen_away.no_output = "off"
python.screen_away.set_away = "on"
python.screen_away.time_format = "since %Y-%m-%d %H:%M:%S%z"
python.tmux_env.exclude = ""
python.tmux_env.include = "*,-*"
python.tmux_env.interval = "30"
python.urlserver.buffer_short_name = "off"
python.urlserver.color = "darkgray"
python.urlserver.color_in_msg = ""
python.urlserver.debug = "off"
python.urlserver.display_urls = "on"
python.urlserver.display_urls_in_msg = "off"
python.urlserver.http_allowed_ips = ""
python.urlserver.http_auth = ""
python.urlserver.http_auth_redirect = "on"
python.urlserver.http_autostart = "on"
python.urlserver.http_bg_color = "#f4f4f4"
python.urlserver.http_css_url = ""
python.urlserver.http_embed_image = "off"
python.urlserver.http_embed_youtube = "off"
python.urlserver.http_embed_youtube_size = "480*350"
python.urlserver.http_fg_color = "#000"
python.urlserver.http_hostname = ""
python.urlserver.http_hostname_display = ""
python.urlserver.http_open_in_new_page = "on"
python.urlserver.http_port = ""
python.urlserver.http_port_display = ""
python.urlserver.http_prefix_suffix = " "
python.urlserver.http_scheme_display = "http"
python.urlserver.http_time_format = "%d/%m/%y %H:%M:%S"
python.urlserver.http_title = "WeeChat URLs"
python.urlserver.http_url_prefix = ""
python.urlserver.msg_filtered = "off"
python.urlserver.msg_ignore_buffers = "core.weechat,python.grep"
python.urlserver.msg_ignore_dup_urls = "off"
python.urlserver.msg_ignore_regex = ""
python.urlserver.msg_ignore_tags = "irc_quit,irc_part,notify_none"
python.urlserver.msg_require_tags = "nick_"
python.urlserver.separators = "[|]"
python.urlserver.url_min_length = "0"
python.urlserver.urls_amount = "100"

[desc]
perl.colorize_lines.blacklist_buffers = "Comma-separated list of channels to be ignored (e.g. freenode.#weechat,*.#python)"
perl.colorize_lines.buffers = "Buffer type affected by the script (all/channel/query, default: all)"
perl.colorize_lines.highlight = "Apply highlight color to the highlighted lines (off/on/nicks). The latter will limit highlighting to nicknames in option 'nicks'"
perl.colorize_lines.highlight_words = "highlight word(s) in text, matching word(s) in weechat.look.highlight"
perl.colorize_lines.highlight_words_color = "color for highlight word in text (fg:bg)"
perl.colorize_lines.ignore_tags = "Comma-separated list of tags to ignore (see /debug tags)"
perl.colorize_lines.lines = "Apply nickname color to the lines (off/on/nicks). The latter will limit highlighting to nicknames in option 'nicks'. You can use a localvar to color all lines with a given color (eg: /buffer set localvar_set_colorize_lines *yellow)"
perl.colorize_lines.nicks = "Comma-separater list of nicks (e.g. freenode.cat,*.dog) OR file name starting with '/' (e.g. /file.txt). In the latter case, nicknames will get loaded from that file inside weechat folder (e.g. from ~/.weechat/file.txt). Nicknames in file are newline-separated (e.g. freenode.dog\n*.cat)"
perl.colorize_lines.own_lines = "Apply nickname color to own lines (off/on/only). The latter turns off all other kinds of coloring altogether"
perl.colorize_lines.own_lines_color = "this color will be used for own messages. Set an empty value to use weechat.color.chat_nick_self"
perl.colorize_lines.tags = "Comma-separated list of tags to accept (see /debug tags)"
python.screen_away.away_suffix = "What to append to your nick when you're away."
python.screen_away.command_on_attach = "Commands to execute on attach, separated by semicolon"
python.screen_away.command_on_detach = "Commands to execute on detach, separated by semicolon"
python.screen_away.ignore = "Comma-separated list of servers to ignore."
python.screen_away.ignore_relays = "Only check screen status and ignore relay interfaces"
python.screen_away.interval = "How often in seconds to check screen status"
python.screen_away.message = "Away message"
python.screen_away.no_output = "no detach/attach information will be displayed in buffer"
python.screen_away.set_away = "Set user as away."
python.screen_away.time_format = "time format append to away message"
python.urlserver.buffer_short_name = "use buffer short name on dedicated buffer (default: "off")"
python.urlserver.color = "color for urls displayed after message (default: "darkgray")"
python.urlserver.color_in_msg = "color for urls displayed inside irc message: it is a number (irc color) between 00 and 15 (see doc for a list of irc colors) (default: "")"
python.urlserver.debug = "print some debug messages (default: "off")"
python.urlserver.display_urls = "display URLs below messages (default: "on")"
python.urlserver.display_urls_in_msg = "add shorten url next to the original url (only in IRC messages) (useful for urlserver behind relay/irc) (default: "off")"
python.urlserver.http_allowed_ips = "regex for IPs allowed to use server (example: "^(123.45.67.89|192.160.*)$") (default: "")"
python.urlserver.http_auth = "login and password (format: "login:password") required to access to page with list of URLs (note: content is evaluated, see /help eval) (default: "")"
python.urlserver.http_auth_redirect = "require the login/password (if option "http_auth" is set) for URLs redirections (default: "on")"
python.urlserver.http_autostart = "start the built-in HTTP server automatically) (default: "on")"
python.urlserver.http_bg_color = "background color for HTML page (default: "#f4f4f4")"
python.urlserver.http_css_url = "URL of external Cascading Style Sheet to add (BE CAREFUL: the HTTP referer will be sent to site hosting CSS file!) (empty value = use default embedded CSS) (default: "")"
python.urlserver.http_embed_image = "embed images in HTML page (BE CAREFUL: the HTTP referer will be sent to site hosting image!) (default: "off")"
python.urlserver.http_embed_youtube = "embed youtube videos in HTML page (BE CAREFUL: the HTTP referer will be sent to youtube!) (default: "off")"
python.urlserver.http_embed_youtube_size = "size for embedded youtube video, format is "xxx*yyy" (default: "480*350")"
python.urlserver.http_fg_color = "foreground color for HTML page (default: "#000")"
python.urlserver.http_hostname = "force hostname/IP in bind of socket (empty value = auto-detect current hostname) (default: "")"
python.urlserver.http_hostname_display = "display this hostname in shortened URLs (default: "")"
python.urlserver.http_open_in_new_page = "open links in new pages/tabs (default: "on")"
python.urlserver.http_port = "force port for listening (empty value = find a random free port) (default: "")"
python.urlserver.http_port_display = "display this port in shortened URLs. Useful if you forward a different external port to the internal port (default: "")"
python.urlserver.http_prefix_suffix = "suffix displayed between prefix and message in HTML page (default: " ")"
python.urlserver.http_scheme_display = "display this scheme in shortened URLs (default: "http")"
python.urlserver.http_time_format = "time format in the HTML page (default: "%d/%m/%y %H:%M:%S")"
python.urlserver.http_title = "title of the HTML page (default: "WeeChat URLs")"
python.urlserver.http_url_prefix = "prefix to add in URLs to prevent external people to scan your URLs (for example: prefix "xx" will give URL: http://host.com:1234/xx/8) (default: "")"
python.urlserver.msg_filtered = "shorten URLs in filtered messages (with /filter) (default: "off")"
python.urlserver.msg_ignore_buffers = "comma-separated list (without spaces) of buffers to ignore (full name like "irc.freenode.#weechat") (default: "core.weechat,python.grep")"
python.urlserver.msg_ignore_dup_urls = "ignore duplicated URLs (do not add an URL in list if it is already) (default: "off")"
python.urlserver.msg_ignore_regex = "ignore messages matching this regex (default: "")"
python.urlserver.msg_ignore_tags = "comma-separated list (without spaces) of tags (or beginning of tags) to ignore (for example, use "notify_none" to ignore self messages or "nick_weebot" to ignore messages from nick "weebot") (default: "irc_quit,irc_part,notify_none")"
python.urlserver.msg_require_tags = "comma-separated list (without spaces) of tags (or beginning of tags) required to shorten URLs (for example "nick_" to shorten URLs only in messages from other users) (default: "nick_")"
python.urlserver.separators = "separators for short url list (string with exactly 3 chars) (default: "[|]")"
python.urlserver.url_min_length = "minimum length for an URL to be shortened (0 = shorten all URLs, -1 = detect length based on shorten URL) (default: "0")"
python.urlserver.urls_amount = "number of URLs to keep in memory (and in file when script is not loaded) (default: "100")"
